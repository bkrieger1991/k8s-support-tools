name: Publish New Version
on: workflow_dispatch
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Publish cross-platform application files
      run: dotnet publish --self-contained false src/JsonValidatorForConfigMap/JsonValidatorForConfigMap.csproj -o ./publish/cross-platform
    - name: Copy readme instructions
      run: cp src/JsonValidatorForConfigMap/release-readme.md publish/cross-platform/Readme.md
    
    - name: Publish win-x64 application files
      run: dotnet publish --self-contained true -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true src/JsonValidatorForConfigMap/JsonValidatorForConfigMap.csproj -o ./publish/win-x64
    - name: Copy readme instructions
      run: cp src/JsonValidatorForConfigMap/release-readme.md publish/win-x64/Readme.md

    - name: Write version into file
      run: grep -oP "(<Version>).*(</Version>)" src/JsonValidatorForConfigMap/JsonValidatorForConfigMap.csproj | awk -F '[><]' '{print $3}' > publish/version
    - name: Save Published Files
      uses: actions/upload-artifact@v2
      with:
        name: published-files
        path: ./publish/
  push-cross-platform:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: published-files
        path: files
    - name: Display structure of downloaded files
      run: ls -Rla
      working-directory: ./
    - name: Get version string
      id: version
      run: echo "::set-output name=version::$(cat files/version)"
    - name: Output version
      run: echo Got version - $VERSION
      env:
        VERSION: ${{ steps.version.outputs.version }}
    - name: Remove version file
      run: rm files/version
      env:
        VERSION: ${{ steps.version.outputs.version }}
    - name: Install zip
      uses: montudor/action-zip@v1    
    - name: Pack published cross-platform files
      run: zip -qq -r JsonValidatorForConfigMap-${{ steps.version.outputs.version }}.zip *
      working-directory: files/cross-platform
    - name: Pack published win-x64 files
      run: zip -qq -r JsonValidatorForConfigMap-win-x64-${{ steps.version.outputs.version }}.zip *
      working-directory: files/win-x64
    - uses: actions/checkout@v2
      name: Checkout releases branch
      with:
        ref: releases
        path: repo
    - name: Copy archive
      run: cp JsonValidatorForConfigMap*.zip repo/
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        path: repo
        delete-branch: true
        branch: release/JsonValidatorForConfigMap
        title: New Release of JsonValidatorForConfigMap
        commit-message: Adds new release-package
        body: |
          Adds new release-package
          [Created automatically]